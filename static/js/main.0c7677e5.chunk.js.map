{"version":3,"sources":["App.js","constants/common.js","components/Tabs.js","components/InputBar.js","components/TodoItem.js","components/TodoList.js","utils/utils.js","index.js"],"names":["Component","HOME","COMPLETED","REMAINING","Tabs","handleClick","event","tab","value","target","COMPLETED_TXT","REMAINING_TXT","_this","props","changeTab","this","homeClass","completedClass","remainingClass","react_default","a","createElement","className","HOME_TXT","onClick","React","InputBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","key","handleSubmit","preventDefault","todoText","state","_this$props","submit","isSearch","setState","handleChange","_this$props2","edit","resetEdit","_this$props3","btnText","placeholderText","text","title","type","onChange","onKeyDown","placeholder","TodoItem","handleChecked","changeCompletion","item","checked","index","_this$props2$item","isCompleted","createdAt","editTodoItem","deleteTodoItem","isComplete","titleClass","localeDate","Date","toLocaleString","TodoList","todos","filter","search","pattern","RegExp","todoItems","map","itemCopy","objectSpread","test","id","components_TodoItem","setLocalStorageItem","window","localStorage","setItem","App","addTodo","todo","slice","currentDate","toISOString","editIndex","idGenerate","concat","toConsumableArray","splice","startEdit","editAlreadyUsed","_this2","storageData","getItem","JSON","parse","parseInt","addEventListener","e","stringify","_this$state","editToogle","components_Tabs","components_InputBar","components_TodoList","withAppTitle","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c7677e5.chunk.js","sourcesContent":["import React from 'react';\n\nimport Tabs from './components/Tabs';\nimport InputBar from './components/InputBar';\nimport TodoList from './components/TodoList';\nimport { setLocalStorageItem, getLocalStorageItem } from './utils/utils';\n\nimport './assets/css/';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      tab: -1,\n      edit: null,\n      editIndex: null,\n      search: '',\n    };\n\n    this.startEdit = false;\n  }\n\n  /**\n   * Add or edit todo item\n   *\n   * @param {string} todo\n   */\n  addTodo = (todo) => {\n    let todos = this.state.todos.slice();\n    const currentDate = new Date().toISOString();\n    const { editIndex } = this.state;\n\n    //if todo is to be edited\n    if (editIndex != null) {\n      todos[editIndex].title = todo;\n      todos[editIndex].createdAt = currentDate;\n    }\n    else {\n      //else todo is to be added\n      this.idGenerate++;\n      const obj = {\n        id: this.idGenerate,\n        title: todo,\n        isCompleted: false,\n        createdAt: currentDate\n      };\n      todos = [obj, ...todos];\n    }\n\n    this.setState({\n      todos\n    });\n\n    //remove edit and editIndex since edit has been done\n    this.resetEdit();\n  }\n\n  /**\n   * Sets edit and editIndex to null so that it doesnot change state to edition\n   */\n  resetEdit = () => {\n    this.setState({\n      edit: null,\n      editIndex: null\n    });\n  }\n\n  /**\n   * Change todo item with index to completed or incompleted.\n   *\n   * @param {int} index\n   * @param {bool} isCompleted\n   */\n  changeCompletion = (index, isCompleted) => {\n    const todos = this.state.todos.slice();\n\n    todos[index].isCompleted = isCompleted;\n    this.setState({ todos });\n  }\n\n  /**\n   * Change current tab being selected\n   * tab is based upon contants in utils file\n   *\n   * @param {int} tab changed indicator of current tab\n   */\n  changeTab = (tab) => {\n    this.setState({ tab });\n  }\n\n  /**\n   * Delete todo item with index index in state:todos\n   *\n   * @param {int} index index of item to be deleted\n   */\n  deleteTodoItem = (index) => {\n    //Reset the edit if current editing item is deleted\n    if (this.state.editIndex === index) {\n      this.resetEdit();\n    }\n    const REMOVE_SINGLE_ELEMENT = 1;\n    const todos = this.state.todos.slice();\n\n    todos.splice(index, REMOVE_SINGLE_ELEMENT);\n    this.setState({ todos });\n  }\n\n  /**\n   * Set state with pattern which can be use to filter the todo list\n   *\n   * @param {string} pattern string to be used to filter todo list\n   */\n  search = (pattern) => {\n    this.setState({\n      search: pattern\n    })\n  }\n\n  /**\n   * Store index and object in state which is going to be edited\n   *\n   * @param {int} index index of todo item to be  edited\n   */\n  editTodoItem = (index) => {\n    this.setState({\n      edit: this.state.todos[index],\n      editIndex: index\n    })\n\n    this.startEdit = true;\n  }\n\n  /**\n   * Set edit object which being edited to null so that value can be changed in input field\n   */\n  editAlreadyUsed = () => {\n    this.setState({ edit: null });\n  }\n\n  componentDidMount() {\n    //if data is already in local storage use it\n    const storageData = window.localStorage.getItem('todoData');\n    const todos = storageData ? JSON.parse(storageData) : [];\n\n    this.setState({\n      todos\n    })\n\n    //stores track of last given id for todo item\n    this.idGenerate = parseInt(getLocalStorageItem('idGenerator')) || 0;\n\n    //store data when tab is closing\n    window.addEventListener('beforeunload', (e) => {\n      setLocalStorageItem('idGenerator', this.idGenerate);\n      setLocalStorageItem('todoData', JSON.stringify(this.state.todos));\n    })\n  }\n\n  render() {\n    const { todos, editIndex, tab, search, edit } = this.state;\n    const editToogle = this.startEdit;\n    const btnText = editIndex != null ? 'Save' : 'Add';\n\n    this.startEdit = false;\n\n    return (\n      <div className='myContainer'>\n        <Tabs changeTab={this.changeTab} tab={tab} />\n\n        <InputBar\n          isSearch={true}\n          btnText={'Search'}\n          submit={this.search}\n          placeholderText='Search here'\n        />\n\n        <InputBar\n          submit={this.addTodo}\n          edit={edit}\n          startEdit={editToogle}\n          resetEdit={this.editAlreadyUsed}\n          placeholderText='Enter Todo Here'\n          btnText={btnText}\n        />\n\n        <TodoList\n          todos={todos}\n          filter={tab}\n          search={search}\n          editTodoItem={this.editTodoItem}\n          deleteTodoItem={this.deleteTodoItem}\n          changeCompletion={this.changeCompletion}\n        />\n      </div>\n    );\n  }\n}\n\nconst withAppTitle = (Component) =>\n  (props) => (\n    <div className={'container-fluid wrapper'}>\n      <h1 className='app-name'>Todo App</h1>\n      <Component {...props} />\n    </div>\n  )\n\nexport default withAppTitle(App);\n","export const HOME = -1;\nexport const COMPLETED = 0;\nexport const REMAINING = 1;\n","import React from 'react';\n\nimport { REMAINING, COMPLETED, HOME } from '../constants/common';\n\nclass Tabs extends React.Component {\n  /**\n   * Handles tab change in menus\n   *\n   * @param {Object} event event triggered on click on tabs\n   */\n  handleClick = (event) => {\n    let tab = HOME;\n    const { value } = event.target;\n\n    if (value === COMPLETED_TXT) {\n      tab = COMPLETED;\n    }\n    else if (value === REMAINING_TXT) {\n      tab = REMAINING;\n    }\n\n    this.props.changeTab(tab);\n  }\n\n  render() {\n    const { tab } = this.props;\n\n    let homeClass = 'col-sm btnWithoutStyle ';\n    let completedClass = 'col-sm btnWithoutStyle ';\n    let remainingClass = 'col-sm btnWithoutStyle ';\n    if (tab === HOME) {\n      homeClass += 'active';\n    }\n    else if (tab === COMPLETED) {\n      completedClass += 'active';\n    }\n    else if (tab === REMAINING) {\n      remainingClass += 'active';\n    }\n\n    return (\n      <div className='row tabs'>\n        <button\n          value={HOME_TXT}\n          onClick={this.handleClick}\n          className={homeClass}\n        >\n          {HOME_TXT}\n        </button>\n        <button\n          value={COMPLETED_TXT}\n          onClick={this.handleClick}\n          className={completedClass}\n        >\n          {COMPLETED_TXT}\n        </button>\n        <button\n          value={REMAINING_TXT}\n          onClick={this.handleClick}\n          className={remainingClass}\n        >\n          {REMAINING_TXT}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\nexport const HOME_TXT = 'Home'\nexport const COMPLETED_TXT = 'Completed';\nexport const REMAINING_TXT = 'Remaining';\n","import React from 'react';\n\nclass InputBar extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoText: ''\n    }\n  }\n\n  /**\n   * Checks for key pressed enter in input field\n   *\n   * @param {Object} event event triggered by input field\n   */\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.handleSubmit(event);\n    }\n  }\n\n  /**\n   * Handles the submission in enter text in input field\n   *\n   * @param {Object} event event triggered by form\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { todoText } = this.state;\n\n    //if input text is blank do not add\n    if (!todoText) {\n      return;\n    }\n\n    const { submit, isSearch } = this.props;\n\n    submit(todoText);\n\n    //input is cleared after submission but not cleared when we are searching\n    if (!isSearch) {\n      this.setState({ todoText: '' });\n    }\n  }\n\n  /**\n   *Handle the change in input field\n   *\n   * @param {Object} event event triggered by input field when something is changed\n   */\n  handleChange = (event) => {\n    this.setState({\n      todoText: event.target.value\n    });\n\n    const { edit, resetEdit, isSearch, submit } = this.props;\n\n    if (edit) {\n      resetEdit();\n    }\n\n    //if searching instantly submit so that list is filtered\n    if (isSearch) {\n      submit(event.target.value);\n    }\n  }\n\n  render() {\n    const { todoText } = this.state;\n    const { btnText, edit, placeholderText } = this.props;\n    const text = edit ? edit.title : todoText;\n\n    return (\n      <div className='inputBar input-group mb-3'>\n        <input\n          type='text'\n          value={text}\n          className=\"form-control\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholderText}\n        />\n\n        <div className=\"input-group-append\">\n          <button\n            className='btn btn-primary'\n            onClick={this.handleSubmit}\n          >\n            {btnText}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputBar;","import React from 'react';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  /**\n   * Handle when item completion radio is checked or unchecked\n   *\n   * @param {Object} event event triggered by radio\n   */\n  handleChecked = (event) => {\n    const { changeCompletion, item } = this.props;\n    const {checked}=this.state;\n\n    changeCompletion(item.index, checked);\n\n    this.setState({\n      checked: !checked\n    });\n\n  }\n\n  render() {\n    const { item: { index, title, isCompleted, createdAt }, editTodoItem, deleteTodoItem } = this.props;\n    const isComplete = isCompleted ? 'checked' : '';\n    const titleClass = isCompleted ? 'completed-item' : ''\n    const localeDate = new Date(createdAt).toLocaleString();\n\n    return (\n      <div className='row'>\n        <div className='container-content-v-center left col-sm-8'>\n          <input\n            type='radio'\n            className='left'\n            checked={isComplete}\n            onChange={this.handleChecked} />\n\n          <div className='left todo-text'>\n            <p className={titleClass}>{title}</p>\n            <small className='text-muted'>Created At: {localeDate}</small>\n          </div>\n        </div>\n        <span className=\"badge badge-primary badge-pill action-btns col-sm-4\">\n          <button\n            className='btn btn-primary'\n            onClick={(event) => editTodoItem(index)}\n          >\n            Edit\n          </button>\n          <button\n            className='btn btn-primary'\n            onClick={(event) => deleteTodoItem(index)}\n          >\n            Delete\n          </button>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from './TodoItem';\nimport { COMPLETED, REMAINING } from '../constants/common';\n\nconst TodoList = (props) => {\n  const {\n    todos,\n    filter,\n    search,\n    editTodoItem,\n    deleteTodoItem,\n    changeCompletion,\n  } = props;\n  const pattern = new RegExp(search);\n  const todoItems = todos.map((item, index) => {\n    const itemCopy = { ...item };\n    itemCopy.index = index;\n\n    if (filter === COMPLETED && !item.isCompleted) {\n      return '';\n    }\n\n    if (filter === REMAINING && item.isCompleted) {\n      return '';\n    }\n\n    if (pattern && !pattern.test(item.title)) {\n      return '';\n    }\n    return (\n      <li key={item.id} className='list-group-item'>\n        {\n          <TodoItem\n            item={itemCopy}\n            editTodoItem={editTodoItem}\n            deleteTodoItem={deleteTodoItem}\n            changeCompletion={changeCompletion}\n          />\n        }\n      </li>\n    );\n  });\n\n  return (\n    <ul className='list-group todo-ul'>\n      {todoItems}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","export const getLocalStorageItem = (item) =>\n  window.localStorage.getItem(item);\n\nexport const setLocalStorageItem = (key, value) =>\n  window.localStorage.setItem(key, value);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}