{"version":3,"sources":["constants/common.js","components/Tabs.js","components/InputBar.js","components/TodoItem.js","components/TodoList.js","services/http.js","App.js","index.js"],"names":["common","HOME","COMPLETED","REMAINING","HOME_TXT","COMPLETED_TXT","REMAINING_TXT","Tabs","handleClick","event","tab","Common","value","target","_this","props","changeTab","this","homeClass","completedClass","remainingClass","react_default","a","createElement","className","onClick","React","Component","InputBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","key","handleSubmit","preventDefault","todoText","state","_this$props","submit","isSearch","editTodo","isOnEdit","currentEditingId","setState","handleChange","_this$props2","_this$props3","btnText","placeholderText","editionObject","text","id","title","type","onChange","onKeyDown","placeholder","TodoItem","handleChecked","handleTodoChecked","item","checked","index","_this$props2$item","isCompleted","createdAt","startEdit","deleteTodoItem","isComplete","titleClass","localeDate","Date","toLocaleString","TodoList","todos","filter","todoItems","map","itemCopy","objectSpread","components_TodoItem","instance","axios","create","baseURL","responseType","_callee","data","regenerator_default","wrap","_context","prev","next","get","sent","abrupt","Promise","resolve","t0","reject","stop","_callee2","obj","_context2","post","_callee3","_context3","delete","concat","_callee4","_context4","put","_callee5","searchQuery","_context5","http","edit","remove","search","App","addTodo","todo","currentDate","toISOString","idGenerate","then","toConsumableArray","editIndex","splice","pattern","response","_this2","reverse","_this3","_this$state","todoData","web","from","opacity","to","config","duration","style","components_Tabs","components_InputBar","components_TodoList","withAppTitle","ReactDOM","render","src_App","document","getElementById"],"mappings":"wPAOeA,EAAA,CACbC,MARY,EASZC,UARgB,EAShBC,UARgB,EAShBC,SARe,OASfC,cARoB,YASpBC,cARoB,aCyEPC,6MA9DbC,YAAc,SAACC,GACb,IAAIC,EAAMC,EAAOV,KACTW,EAAUH,EAAMI,OAAhBD,MAEJA,IAAUD,EAAON,cACnBK,EAAMC,EAAOT,UACJU,IAAUD,EAAOL,gBAC1BI,EAAMC,EAAOR,WAGfW,EAAKC,MAAMC,UAAUN,4EASd,IACCA,EAAQO,KAAKF,MAAbL,IAEJQ,EAAY,0BACZC,EAAiB,0BACjBC,EAAiB,0BAUrB,OARIV,IAAQC,EAAOV,KACjBiB,GAAa,SACJR,IAAQC,EAAOT,UACxBiB,GAAkB,SACTT,IAAQC,EAAOR,YACxBiB,GAAkB,UAIlBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEX,MAAOD,EAAOP,SACdqB,QAASR,KAAKT,YACdgB,UAAWN,GAEVP,EAAOP,UAEViB,EAAAC,EAAAC,cAAA,UACEX,MAAOD,EAAON,cACdoB,QAASR,KAAKT,YACdgB,UAAWL,GAEVR,EAAON,eAEVgB,EAAAC,EAAAC,cAAA,UACEX,MAAOD,EAAOL,cACdmB,QAASR,KAAKT,YACdgB,UAAWJ,GAEVT,EAAOL,uBA7DCoB,IAAMC,WC0HVC,cAtHb,SAAAA,EAAYb,GAAO,IAAAD,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAZ,KAAAW,IACjBd,EAAAe,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhB,KAAMF,KAgBRmB,cAAgB,SAACzB,GACG,UAAdA,EAAM0B,KACRrB,EAAKsB,aAAa3B,IAnBHK,EA6BnBsB,aAAe,SAAC3B,GACdA,EAAM4B,iBADkB,IAGhBC,EAAaxB,EAAKyB,MAAlBD,SAGR,GAAKA,EAAL,CANwB,IAAAE,EAUe1B,EAAKC,MAApC0B,EAVgBD,EAUhBC,OAAQC,EAVQF,EAURE,SAAUC,EAVFH,EAUEG,SAEtB7B,EAAK8B,UACPD,EAASL,GACTxB,EAAK8B,UAAW,EAChB9B,EAAK+B,iBAAmB,MAExBJ,EAAOH,GAIJI,GACH5B,EAAKgC,SAAS,CAAER,SAAU,OAnDXxB,EA4DnBiC,aAAe,SAACtC,GACdK,EAAKgC,SAAS,CACZR,SAAU7B,EAAMI,OAAOD,QAFD,IAAAoC,EAKKlC,EAAKC,MAA1B2B,EALgBM,EAKhBN,SAAUD,EALMO,EAKNP,OAGdC,GACFD,EAAOhC,EAAMI,OAAOD,QAlEtBE,EAAKyB,MAAQ,CACXD,SAAU,IAGZxB,EAAK8B,UAAW,EAChB9B,EAAK+B,iBAAmB,KARP/B,wEAgFV,IACCwB,EAAarB,KAAKsB,MAAlBD,SADDW,EAE6ChC,KAAKF,MAAjDmC,EAFDD,EAECC,QAASC,EAFVF,EAEUE,gBAAiBC,EAF3BH,EAE2BG,cAC9BC,EAAOf,EAWX,OATIc,GAAiBnC,KAAK4B,mBAAqBO,EAAcE,IAC3DrC,KAAK2B,UAAW,EAChB3B,KAAK4B,iBAAmBO,EAAcE,GACtCD,EAAOD,EAAcG,OACXH,IACVnC,KAAK2B,UAAW,EAChB3B,KAAK4B,iBAAmB,MAIxBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,SACEiC,KAAK,OACL5C,MAAOyC,EACP7B,UAAU,eACViC,SAAUxC,KAAK8B,aACfW,UAAWzC,KAAKiB,cAChByB,YAAaR,IAGf9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVC,QAASR,KAAKmB,cAEbc,YApHUxB,IAAMC,WC4EdiC,cArEb,SAAAA,EAAY7C,GAAO,IAAAD,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAZ,KAAA2C,IACjB9C,EAAAe,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA+B,GAAA3B,KAAAhB,KAAMF,KAWR8C,cAAgB,WAAM,IAAArB,EACgB1B,EAAKC,MAAjC+C,EADYtB,EACZsB,kBAAmBC,EADPvB,EACOuB,KACnBC,EAAYlD,EAAKyB,MAAjByB,QAERF,EAAkBC,EAAKE,MAAOD,GAE9BlD,EAAKgC,SAAS,CACZkB,SAAUA,KAhBZlD,EAAKyB,MAAQ,CACXyB,SAAS,GAJMlD,wEA8BV,IAAAkC,EAC+E/B,KAAKF,MADpFmD,EAAAlB,EACCe,KAAQE,EADTC,EACSD,MAAOV,EADhBW,EACgBX,MAAOY,EADvBD,EACuBC,YAAaC,EADpCF,EACoCE,UAAaC,EADjDrB,EACiDqB,UAAWC,EAD5DtB,EAC4DsB,eAC7DC,EAAaJ,EAAc,UAAY,GACvCK,EAAaL,EAAc,iBAAmB,GAC9CM,EAAa,IAAIC,KAAKN,GAAWO,iBAEvC,OACEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,SACEiC,KAAK,QACLhC,UAAU,OACVwC,QAASO,EACTd,SAAUxC,KAAK4C,gBAEjBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAWgD,GAAajB,GAC3BlC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,eAA2CiD,KAG/CpD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uDACdH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVC,QAAS,kBAAM4C,EAAUJ,KAF3B,QAMA5C,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVC,QAAS,kBAAM6C,EAAeL,KAFhC,mBAhEavC,IAAMC,WC8CdiD,EA5CE,SAAC7D,GAAU,IAGxB8D,EAKE9D,EALF8D,MACAC,EAIE/D,EAJF+D,OACAT,EAGEtD,EAHFsD,UACAC,EAEEvD,EAFFuD,eACAR,EACE/C,EADF+C,kBAGIiB,EAAYF,EAAMG,IAAI,SAACjB,EAAME,GACjC,IAAMgB,EAAQpD,OAAAqD,EAAA,EAAArD,CAAA,GAAQkC,GAItB,OAFAkB,EAAShB,MAAQA,EAEba,IAAWnE,EAAOT,WAAc6D,EAAKI,YAIrCW,IAAWnE,EAAOR,WAAa4D,EAAKI,YAC/B,GAIP9C,EAAAC,EAAAC,cAAA,MAAIY,IAAK4B,EAAKT,GAAI9B,UAAU,mBAExBH,EAAAC,EAAAC,cAAC4D,EAAD,CACEpB,KAAMkB,EACNZ,UAAWA,EACXC,eAAgBA,EAChBR,kBAAmBA,KAdlB,KAqBX,OACEzC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXuD,2CC7CDK,SAAWC,EAAMC,OAAO,CAC5BC,QAAS,gDACTC,aAAc,oDAQhB,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAArE,EAAAsE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBX,EAASY,IAAI,IAFpC,cAEUN,EAFVG,EAAAI,KAAAJ,EAAAK,OAAA,SAIWC,QAAQC,QAAQV,IAJ3B,cAAAG,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAK,OAAA,SAMWC,QAAQG,OAART,EAAAQ,KANX,yBAAAR,EAAAU,SAAAd,EAAAxE,KAAA,8EAiBA,SAAAuF,EAAoBC,GAApB,IAAAf,EAAA,OAAAC,EAAArE,EAAAsE,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAEuBX,EAASuB,KAAK,GAAIF,GAFzC,cAEUf,EAFVgB,EAAAT,KAAAS,EAAAR,OAAA,SAIWC,QAAQC,QAAQV,IAJ3B,cAAAgB,EAAAZ,KAAA,EAAAY,EAAAL,GAAAK,EAAA,SAAAA,EAAAR,OAAA,SAMWC,QAAQG,OAARI,EAAAL,KANX,yBAAAK,EAAAH,SAAAC,EAAAvF,KAAA,8EAiBA,SAAA2F,EAAsBtD,GAAtB,IAAAoC,EAAA,OAAAC,EAAArE,EAAAsE,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAEuBX,EAAS0B,OAAT,IAAAC,OAAoBzD,IAF3C,cAEUoC,EAFVmB,EAAAZ,KAAAY,EAAAX,OAAA,SAIWC,QAAQC,QAAQV,IAJ3B,cAAAmB,EAAAf,KAAA,EAAAe,EAAAR,GAAAQ,EAAA,SAAAA,EAAAX,OAAA,SAMWC,QAAQG,OAARO,EAAAR,KANX,yBAAAQ,EAAAN,SAAAK,EAAA3F,KAAA,8EAkBA,SAAA+F,EAAoB1D,EAAImD,GAAxB,IAAAf,EAAA,OAAAC,EAAArE,EAAAsE,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAEuBX,EAAS8B,IAAT,IAAAH,OAAiBzD,GAAjBzB,OAAAqD,EAAA,EAAArD,CAAA,GAA4B4E,IAFnD,cAEUf,EAFVuB,EAAAhB,KAAAgB,EAAAf,OAAA,SAIWC,QAAQC,QAAQV,IAJ3B,cAAAuB,EAAAnB,KAAA,EAAAmB,EAAAZ,GAAAY,EAAA,SAAAA,EAAAf,OAAA,SAMWC,QAAQG,OAARW,EAAAZ,KANX,yBAAAY,EAAAV,SAAAS,EAAA/F,KAAA,8EAiBA,SAAAkG,EAAsBC,GAAtB,IAAA1B,EAAA,OAAAC,EAAArE,EAAAsE,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEuBX,EAASY,IAAT,MAAAe,OAAmBK,IAF1C,cAEU1B,EAFV2B,EAAApB,KAAAoB,EAAAnB,OAAA,SAIWC,QAAQC,QAAQV,IAJ3B,cAAA2B,EAAAvB,KAAA,EAAAuB,EAAAhB,GAAAgB,EAAA,SAAAA,EAAAnB,OAAA,SAMWC,QAAQG,OAARe,EAAAhB,KANX,yBAAAgB,EAAAd,SAAAY,EAAAlG,KAAA,mCAUe,ICiJOU,EDjJP2F,EAAA,CACbtB,+CACAuB,mDACAZ,iDACAa,mDACAC,oDCjFIC,cAQJ,SAAAA,EAAY3G,GAAO,IAAAD,EAAA,OAAAe,OAAAC,EAAA,EAAAD,CAAAZ,KAAAyG,IACjB5G,EAAAe,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAA6F,GAAAzF,KAAAhB,KAAMF,KAgBR4G,QAAU,SAACC,GACT,IAAI/C,EAAQ/D,EAAKyB,MAAMsC,MAAMG,IAAI,SAACjB,GAAD,OAAAlC,OAAAqD,EAAA,EAAArD,CAAA,GAAgBkC,KAC3C8D,GAAc,IAAInD,MAAOoD,cAE/BhH,EAAKiH,aACL,IAAMtB,EAAM,CACVnD,GAAIxC,EAAKiH,WACTxE,MAAOqE,EACPzD,aAAa,EACbC,UAAWyD,GAEIP,EAAKX,KAAKF,GAElBuB,KAAK,WACZnD,EAAK,CAAI4B,GAAJM,OAAAlF,OAAAoG,EAAA,EAAApG,CAAYgD,IACjB/D,EAAKgC,SAAS,CACZ+B,aAjCa/D,EA2CnB6B,SAAW,SAACiF,GACV,IAAM/C,EAAQ/D,EAAKyB,MAAMsC,MAAMG,IAAI,SAACjB,GAAD,OAAAlC,OAAAqD,EAAA,EAAArD,CAAA,GAAgBkC,KAC7C8D,GAAc,IAAInD,MAAOoD,cACvBI,EAAcpH,EAAKyB,MAAnB2F,UAEFzB,EAAG5E,OAAAqD,EAAA,EAAArD,CAAA,GAAQgD,EAAMqD,GAAd,CAA0B3E,MAAOqE,EAAMxD,UAAWyD,IAE3DP,EAAKC,KAAK1C,EAAMqD,GAAW5E,GAAImD,GAAKuB,KAAK,WACvCnD,EAAMqD,GAAW3E,MAAQqE,EACzB/C,EAAMqD,GAAW9D,UAAYyD,EAE7B/G,EAAKgC,SAAS,CACZ+B,MAAMhD,OAAAoG,EAAA,EAAApG,CAAKgD,GACXqD,UAAW,UAxDEpH,EAmEnBgD,kBAAoB,SAACG,EAAOE,GAC1B,IAAMU,EAAQ/D,EAAKyB,MAAMsC,MAAMG,IAAI,SAACjB,GAAD,OAAAlC,OAAAqD,EAAA,EAAArD,CAAA,GAAgBkC,KAEnDc,EAAMZ,GAAOE,YAAcA,EAC3BrD,EAAKgC,SAAS,CAAE+B,WAvEC/D,EAgFnBE,UAAY,SAACN,GACXI,EAAKgC,SAAS,CAAEpC,SAjFCI,EAyFnBwD,eAAiB,SAACL,GAEhBnD,EAAKgC,SAAS,CACZoF,UAAW,OAGb,IACMrD,EAAQ/D,EAAKyB,MAAMsC,MAAMG,IAAI,SAACjB,GAAD,OAAAlC,OAAAqD,EAAA,EAAArD,CAAA,GAAgBkC,KAEnDuD,EAAKE,OAAO3C,EAAMZ,GAAOX,IAAI0E,KAAK,WAChCnD,EAAMsD,OAAOlE,EAJe,GAK5BnD,EAAKgC,SAAS,CAAE+B,aApGD/D,EA6GnB2G,OAAS,SAACW,GACJA,EACoBd,EAAKG,OAAOW,GAG/BJ,KAAK,SAACK,GACLvH,EAAKgC,SAAS,CACZ2E,OAAQY,EAAS3C,SAIvB5E,EAAKgC,SAAS,CACZ2E,OAAQ,QAzHK3G,EAmInBuD,UAAY,SAACJ,GACXnD,EAAKgC,SAAS,CACZoF,UAAWjE,KAlIbnD,EAAKyB,MAAQ,CACXsC,MAAO,GACPnE,IAAKC,EAAOV,KACZiI,UAAW,KACXT,OAAQ,MAPO3G,mFA6IC,IAAAwH,EAAArH,KACDqG,EAAKtB,MAGbgC,KAAK,SAACK,GACb,IAAMxD,EAAQwD,EAAS3C,KAAK6C,UAG5BD,EAAKP,WAAalD,EAAM,GAAKA,EAAM,GAAGvB,GAAK,EAE3CgF,EAAKxF,SAAS,CACZ+B,6CAUG,IAAA2D,EAAAvH,KAAAwH,EACmCxH,KAAKsB,MAAvCsC,EADD4D,EACC5D,MAAOqD,EADRO,EACQP,UAAWxH,EADnB+H,EACmB/H,IAAK+G,EADxBgB,EACwBhB,OACzBvE,EAAwB,OAAdgF,EAAqB,OAAS,MACxCQ,EAAWjB,GAAU5C,EAErBzB,EAA8B,OAAd8E,EAAArG,OAAAqD,EAAA,EAAArD,CAAA,GAA0BgD,EAAMqD,IAAe,KAErE,OACE7G,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACEC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfE,OAAQ,CAAEC,SAAU,MAEnB,SAAAjI,GAAK,OACJM,EAAAC,EAAAC,cAAA,OAAK0H,MAAOlI,EAAOS,UAAU,eAC3BH,EAAAC,EAAAC,cAAC2H,EAAD,CAAMlI,UAAWwH,EAAKxH,UAAWN,IAAKA,IAEtCW,EAAAC,EAAAC,cAAC4H,EAAD,CACEzG,UAAU,EACVQ,QAAS,SACTT,OAAQ+F,EAAKf,OACbtE,gBAAgB,gBAGlB9B,EAAAC,EAAAC,cAAC4H,EAAD,CACE1G,OAAQ+F,EAAKb,QACbhF,SAAU6F,EAAK7F,SACfS,cAAeA,EACfD,gBAAgB,kBAChBD,QAASA,IAGX7B,EAAAC,EAAAC,cAAC6H,EAAD,CACEvE,MAAO6D,EACP5D,OAAQpE,EACR+G,OAAQA,EACRpD,UAAWmE,EAAKnE,UAChBC,eAAgBkE,EAAKlE,eACrBR,kBAAmB0E,EAAK1E,8BAhNpBpC,IAAMC,WAqOT0H,GARO1H,EAQM+F,EAP1B,SAAC3G,GAAD,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAW,2BACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,YACAH,EAAAC,EAAAC,cAACI,EAAcZ,MC7OrBuI,IAASC,OACPlI,EAAAC,EAAAC,cAACiI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ef9fed1e.chunk.js","sourcesContent":["const HOME = -1;\nconst COMPLETED = 0;\nconst REMAINING = 1;\nconst HOME_TXT = 'Home';\nconst COMPLETED_TXT = 'Completed';\nconst REMAINING_TXT = 'Remaining';\n\nexport default {\n  HOME,\n  COMPLETED,\n  REMAINING,\n  HOME_TXT,\n  COMPLETED_TXT,\n  REMAINING_TXT,\n};\n","import React from 'react';\n\nimport Common from '../constants/common';\n\n/**\n * Component which shows three tabs with equal width.\n *\n * @class Tabs\n * @extends {React.Component}\n */\nclass Tabs extends React.Component {\n  /**\n   * Handles tab change in menus.\n   *\n   * @param {Object} event Event triggered on click on tabs.\n   */\n  handleClick = (event) => {\n    let tab = Common.HOME;\n    const { value } = event.target;\n\n    if (value === Common.COMPLETED_TXT) {\n      tab = Common.COMPLETED;\n    } else if (value === Common.REMAINING_TXT) {\n      tab = Common.REMAINING;\n    }\n\n    this.props.changeTab(tab);\n  }\n\n  /**\n   * Render function is automaticall called which renders JSX component.\n   *\n   * @returns\n   * @memberof Tabs\n   */\n  render() {\n    const { tab } = this.props;\n\n    let homeClass = 'col-sm btnWithoutStyle ';\n    let completedClass = 'col-sm btnWithoutStyle ';\n    let remainingClass = 'col-sm btnWithoutStyle ';\n\n    if (tab === Common.HOME) {\n      homeClass += 'active';\n    } else if (tab === Common.COMPLETED) {\n      completedClass += 'active';\n    } else if (tab === Common.REMAINING) {\n      remainingClass += 'active';\n    }\n\n    return (\n      <div className='row tabs'>\n        <button\n          value={Common.HOME_TXT}\n          onClick={this.handleClick}\n          className={homeClass}\n        >\n          {Common.HOME_TXT}\n        </button>\n        <button\n          value={Common.COMPLETED_TXT}\n          onClick={this.handleClick}\n          className={completedClass}\n        >\n          {Common.COMPLETED_TXT}\n        </button>\n        <button\n          value={Common.REMAINING_TXT}\n          onClick={this.handleClick}\n          className={remainingClass}\n        >\n          {Common.REMAINING_TXT}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React from 'react';\n\n/**\n * Component with Input Field and Button in horizontal.\n *\n * @class InputBar\n * @extends {React.Component}\n */\nclass InputBar extends React.Component {\n  /**\n   *\n   * @param {*} props\n   * @memberof InputBar\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoText: ''\n    };\n\n    this.isOnEdit = false;\n    this.currentEditingId = null;\n  }\n\n  /**\n   * Checks for key pressed enter in input field.\n   *\n   * @param {Object} event Event triggered by input field.\n   * @memberof InputBar\n   */\n  handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      this.handleSubmit(event);\n    }\n  }\n\n  /**\n   * Submission handler for input field.\n   *\n   * @param {Object} event Event triggered by form.\n   * @memberof InputBar\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { todoText } = this.state;\n\n    // if input text is blank do not add\n    if (!todoText) {\n      return;\n    }\n\n    const { submit, isSearch, editTodo } = this.props;\n\n    if (this.isOnEdit) {\n      editTodo(todoText);\n      this.isOnEdit = false;\n      this.currentEditingId = null;\n    } else {\n      submit(todoText);\n    }\n\n    // input is cleared after submission but not cleared when we are searching\n    if (!isSearch) {\n      this.setState({ todoText: '' });\n    }\n  }\n\n  /**\n   * Handle the change in input field.\n   *\n   * @param {Object} event Event triggered by input field when something is changed.\n   */\n  handleChange = (event) => {\n    this.setState({\n      todoText: event.target.value\n    });\n\n    const { isSearch, submit } = this.props;\n\n    // if searching instantly submit so that list is filtered\n    if (isSearch) {\n      submit(event.target.value);\n    }\n\n  }\n\n  /**\n   * This function is automatically called to render JSX of compoenent.\n   *\n   * @returns\n   * @memberof InputBar\n   */\n  render() {\n    const { todoText } = this.state;\n    const { btnText, placeholderText, editionObject } = this.props;\n    let text = todoText;\n\n    if (editionObject && this.currentEditingId !== editionObject.id) {\n      this.isOnEdit = true;\n      this.currentEditingId = editionObject.id;\n      text = editionObject.title;\n    } else if (!editionObject) {\n      this.isOnEdit = false;\n      this.currentEditingId = null;\n    }\n\n    return (\n      <div className='inputBar input-group mb-3'>\n        <input\n          type='text'\n          value={text}\n          className=\"form-control\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholderText}\n        />\n\n        <div className=\"input-group-append\">\n          <button\n            className='btn btn-primary'\n            onClick={this.handleSubmit}\n          >\n            {btnText}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputBar;\n","import React from 'react';\n\n/**\n * Renders single item todo item.\n *\n * @class TodoItem\n * @extends {React.Component}\n */\nclass TodoItem extends React.Component {\n  /**\n   * Creates an instance of TodoItem.\n   *\n   * @param {*} props\n   * @memberof TodoItem\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  /**\n   * Handle when item completion radio is checked or unchecked.\n   *\n   */\n  handleChecked = () => {\n    const { handleTodoChecked, item } = this.props;\n    const { checked } = this.state;\n\n    handleTodoChecked(item.index, checked);\n\n    this.setState({\n      checked: !checked\n    });\n\n  }\n\n  /**\n   * Render component to show list of items.\n   *\n   * @returns\n   * @memberof TodoItem\n   */\n  render() {\n    const { item: { index, title, isCompleted, createdAt }, startEdit, deleteTodoItem } = this.props;\n    const isComplete = isCompleted ? 'checked' : '';\n    const titleClass = isCompleted ? 'completed-item' : '';\n    const localeDate = new Date(createdAt).toLocaleString();\n\n    return (\n      <div className='row'>\n        <div className='container-content-v-center left col-sm-8'>\n          <input\n            type='radio'\n            className='left'\n            checked={isComplete}\n            onChange={this.handleChecked} />\n\n          <div className='left todo-text'>\n            <p className={titleClass}>{title}</p>\n            <small className='text-muted'>Created At: {localeDate}</small>\n          </div>\n        </div>\n        <span className=\"badge badge-primary badge-pill action-btns col-sm-4\">\n          <button\n            className='btn btn-primary'\n            onClick={() => startEdit(index)}\n          >\n            Edit\n          </button>\n          <button\n            className='btn btn-primary'\n            onClick={() => deleteTodoItem(index)}\n          >\n            Delete\n          </button>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from './TodoItem';\nimport Common from '../constants/common';\n\n/**\n * Renders list items.\n *\n * @param {Object} props\n */\nconst TodoList = (props) => {\n\n  const {\n    todos,\n    filter,\n    startEdit,\n    deleteTodoItem,\n    handleTodoChecked,\n  } = props;\n\n  const todoItems = todos.map((item, index) => {\n    const itemCopy = { ...item };\n\n    itemCopy.index = index;\n\n    if (filter === Common.COMPLETED && !item.isCompleted) {\n      return '';\n    }\n\n    if (filter === Common.REMAINING && item.isCompleted) {\n      return '';\n    }\n\n    return (\n      <li key={item.id} className='list-group-item'>\n        {\n          <TodoItem\n            item={itemCopy}\n            startEdit={startEdit}\n            deleteTodoItem={deleteTodoItem}\n            handleTodoChecked={handleTodoChecked}\n          />\n        }\n      </li>\n    );\n  });\n\n  return (\n    <ul className='list-group todo-ul'>\n      {todoItems}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import axios from 'axios';\n/**\n * Creates and instance of axios\n */\nconst instance = axios.create({\n  baseURL: 'https://todo-react-sminmgr.herokuapp.com/todo',\n  responseType: 'json'\n});\n\n/**\n * GET method to retrieve data from todo server.\n *\n * @returns {Object<Promise>} Returns promise either resolved or rejected.\n */\nasync function get() {\n  try {\n    const data = await instance.get('');\n\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\n/**\n * POST method to post or save data into the server.\n *\n * @param {Object} obj Object to be saved in server.\n *\n * @returns {Object<Promise>} Returns promise either resolved or rejected.\n */\nasync function post(obj) {\n  try {\n    const data = await instance.post('', obj);\n\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\n/**\n * DELETE method to delete todo in server with id.\n *\n * @param {Integer} id Todo to be removed with param id.\n *\n * @returns {Object<Promise>} Returns promise either resolved or rejected.\n */\nasync function remove(id) {\n  try {\n    const data = await instance.delete(`/${id}`);\n\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\n/**\n * PUT method to replace todo with param object having param id.\n *\n * @param {Integer} id Id of todo to be edited.\n * @param {Object} obj Changed object of an editing todo.\n *\n * @returns {Object<Promise>} Returns promise either resolved or rejected.\n */\nasync function edit(id, obj) {\n  try {\n    const data = await instance.put(`/${id}`, { ...obj });\n\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\n/**\n * Search method is used to search for pattern searchQuery in server.\n *\n * @param {String} searchQuery Pattern used to search for.\n *\n * @returns {Object<Promise>} Returns promise either resolved or rejected.\n */\nasync function search(searchQuery) {\n  try {\n    const data = await instance.get(`?q=${searchQuery}`);\n\n    return Promise.resolve(data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nexport default {\n  get,\n  edit,\n  post,\n  remove,\n  search\n};\n","import React from 'react';\nimport { Spring } from 'react-spring';\n\nimport Tabs from './components/Tabs';\nimport InputBar from './components/InputBar';\nimport TodoList from './components/TodoList';\n\nimport './assets/css/';\nimport http from './services/http';\nimport Common from './constants/common';\n\n/**\n *Main class which handles overall app functionality and rendering\n *\n * @class App\n * @extends {React.Component}\n */\nclass App extends React.Component {\n\n  /**\n   *\n   *\n   * @param {Object} props Object passed when intance is created.\n   * @memberof App\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      tab: Common.HOME,\n      editIndex: null,\n      search: null,\n    };\n\n  }\n\n  /**\n   * Add todo item.\n   *\n   * @param {string} todo\n   */\n  addTodo = (todo) => {\n    let todos = this.state.todos.map((item) => ({ ...item }));\n    const currentDate = new Date().toISOString();\n\n    this.idGenerate++;\n    const obj = {\n      id: this.idGenerate,\n      title: todo,\n      isCompleted: false,\n      createdAt: currentDate\n    };\n    const todoData = http.post(obj);\n\n    todoData.then(() => {\n      todos = [obj, ...todos];\n      this.setState({\n        todos\n      });\n    });\n  }\n\n  /**\n   * Edit todo item.\n   *\n   * @param {string} todo\n   */\n  editTodo = (todo) => {\n    const todos = this.state.todos.map((item) => ({ ...item }));\n    const currentDate = new Date().toISOString();\n    const { editIndex } = this.state;\n\n    const obj = { ...todos[editIndex], title: todo, createdAt: currentDate };\n\n    http.edit(todos[editIndex].id, obj).then(() => {\n      todos[editIndex].title = todo;\n      todos[editIndex].createdAt = currentDate;\n\n      this.setState({\n        todos: [...todos],\n        editIndex: null\n      });\n    });\n  }\n\n  /**\n   * Change todo item with index to completed or incompleted.\n   *\n   * @param {int} index\n   * @param {bool} isCompleted\n   */\n  handleTodoChecked = (index, isCompleted) => {\n    const todos = this.state.todos.map((item) => ({ ...item }));\n\n    todos[index].isCompleted = isCompleted;\n    this.setState({ todos });\n  }\n\n  /**\n   * Change current tab being selected.\n   * Tab is based upon contants in utils file.\n   *\n   * @param {int} tab Changed indicator of current tab.\n   */\n  changeTab = (tab) => {\n    this.setState({ tab });\n  }\n\n  /**\n   * Delete todo item with index index in state:todos.\n   *\n   * @param {int} index Index of item to be deleted.\n   */\n  deleteTodoItem = (index) => {\n    // Reset the edit if current editing item is deleted\n    this.setState({\n      editIndex: null\n    });\n\n    const REMOVE_SINGLE_ELEMENT = 1;\n    const todos = this.state.todos.map((item) => ({ ...item }));\n\n    http.remove(todos[index].id).then(() => {\n      todos.splice(index, REMOVE_SINGLE_ELEMENT);\n      this.setState({ todos });\n    });\n  }\n\n  /**\n   * Set state with pattern which can be use to filter the todo list.\n   *\n   * @param {string} pattern String to be used to filter todo list.\n   */\n  search = (pattern) => {\n    if (pattern) {\n      const searchedQuery = http.search(pattern);\n\n      searchedQuery\n        .then((response) => {\n          this.setState({\n            search: response.data\n          });\n        });\n    } else {\n      this.setState({\n        search: null\n      });\n    }\n  }\n\n  /**\n   * Store index and object in state which is going to be edited.\n   *\n   * @param {int} index Index of todo item to be  edited.\n   */\n  startEdit = (index) => {\n    this.setState({\n      editIndex: index\n    });\n  }\n\n  /**\n   *\n   * @memberof App\n   */\n  componentDidMount() {\n    const todoData = http.get();\n\n    // Retrieve data from server after component is mounted and set into state\n    todoData.then((response) => {\n      const todos = response.data.reverse();\n\n      // stores track of last given id for todo item\n      this.idGenerate = todos[0] ? todos[0].id : 0;\n\n      this.setState({\n        todos\n      });\n    });\n  }\n\n  /**\n   *\n   * @returns JSX to be rendered.\n   * @memberof App\n   */\n  render() {\n    const { todos, editIndex, tab, search } = this.state;\n    const btnText = editIndex !== null ? 'Save' : 'Add';\n    const todoData = search || todos;\n\n    const editionObject = editIndex !== null ? { ...todos[editIndex] } : null;\n\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ duration: 1000 }}\n      >\n        {props => (\n          <div style={props} className='myContainer'>\n            <Tabs changeTab={this.changeTab} tab={tab} />\n\n            <InputBar\n              isSearch={true}\n              btnText={'Search'}\n              submit={this.search}\n              placeholderText='Search here'\n            />\n\n            <InputBar\n              submit={this.addTodo}\n              editTodo={this.editTodo}\n              editionObject={editionObject}\n              placeholderText='Enter Todo Here'\n              btnText={btnText}\n            />\n\n            <TodoList\n              todos={todoData}\n              filter={tab}\n              search={search}\n              startEdit={this.startEdit}\n              deleteTodoItem={this.deleteTodoItem}\n              handleTodoChecked={this.handleTodoChecked}\n            />\n          </div>\n        )}\n      </Spring >\n    );\n  }\n}\n\n/**\n *\n * @param {Object<React.Component>} Component\n */\nconst withAppTitle = (Component) =>\n  (props) => (\n    <div className={'container-fluid wrapper'}>\n      <h1 className='app-name'>Todo App</h1>\n      <Component {...props} />\n    </div>\n  );\n\nexport default withAppTitle(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"],"sourceRoot":""}